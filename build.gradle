plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'com.github.johnrengelman.shadow' version '8.1.1' // aggiunto ShadowJar
}

group = 'me.mercy'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    // Repo di Aikar per ACF
    maven {
        name = "aikar-repo"
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
}

dependencies {
    // Paper API (solo compileOnly perché Paper è già presente sul server)
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    // ACF per Paper -> lo includiamo con implementation così ShadowJar lo mette dentro il JAR
    implementation("co.aikar:acf-paper:0.5.1-SNAPSHOT")
}

tasks {
    runServer {
        minecraftVersion("1.21")
    }

    // Task ShadowJar
    shadowJar {
        archiveBaseName.set('StarInvs')
        archiveClassifier.set('')
        archiveVersion.set('1.0')
        mergeServiceFiles() // importante per i file di servizio META-INF
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
